Bootstrap: docker
From: nvidia/cuda:10.0-devel-ubuntu18.04
Stage: build

%labels
    version v0.0.1

# %environment

%files
    /storage/hpc/mpi/parallel_studio_xe_2020_cluster_edition.tgz /opt
    /storage/hpc/benchmark/hpcc-1.5.0.tar.gz /root
    /data/singu/def_files/hpc_mpi_cuda_singu_def_file/modulefiles/general /root/modulefiles
    /data/singu/def_files/hpc_mpi_cuda_singu_def_file/intel_sn  /opt

%post
#build arg and env
    	export MPIDIR=/opt && \
    	export APPDIR=/root && \
    	export LANG=C && \
    	export LC_ALL=C && \
	export DEBIAN_FRONTEND=noninteractive

#apt relative package
    apt update && apt install -y --reinstall systemd iptables && \
    apt install -y gcc g++ gfortran make cmake wget git ssh tcl python3 vim locate bash-completion \
	net-tools iputils-ping iproute2 curl \
	environment-modules \
	libnss3 libgtk2.*common libpango-1* libasound2* xserver-xorg cpio \
	libgtk-3-dev libssl-dev linux-headers-$(uname -r) \
	autoconf automake \
	libibverbs-dev libatlas3-base \
	numactl libnuma-dev \
	tcl-dev tk-dev mesa-common-dev libjpeg-dev libtogl-dev

#intel
%appinstall intel
	cd $MPIDIR && \
	tar zxvf parallel_studio_xe_2020_cluster_edition.tgz && \
	rm parallel_studio_xe_2020_cluster_edition.tgz && \
	cd parallel_studio_xe_2020_cluster_edition && \
	sed -ine 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/' silent.cfg && \
	sed -ine 's/ARCH_SELECTED=ALL/ARCH_SELECTED=INTEL64/' silent.cfg && \
	sed -inre "s/#ACTIVATION_SERIAL_NUMBER=snpat/ACTIVATION_SERIAL_NUMBER=$(cat ../intel_sn)/" silent.cfg && \
	sed -ine 's/ACTIVATION_TYPE=exist_lic/ACTIVATION_TYPE=serial_number/' silent.cfg && \
	./install.sh --silent silent.cfg && \
	rm /opt/intel_sn

#hpcc part
%appinstall hpcc
	cd $APPDIR && \
	tar zxvf hpcc-1.5.0.tar.gz && \
	rm hpcc-1.5.0.tar.gz && \
    cd hpcc-1.5.0 && \
    cp hpl/setup/Make.LinuxIntelIA64Itan2_eccMKL hpl/Make.Intel64 && \
    sed -iner 's/^TOPdir       = ..\/..\/../TOPdir       = ${APPDIR}\/hpcc-1.5.0\/hpl/' hpl/Make.Intel64 && \
    sed -iner 's/^MPinc        =/MPinc        = -I${I_MPI_ROOT}\/intel64\/include #/' hpl/Make.Intel64 && \
    sed -iner 's/^MPlib        =/MPlib        = ${I_MPI_ROOT}\/intel64\/lib\/release\/libmpi.so #/' hpl/Make.Intel64 && \
    sed -iner 's/^LAinc        =/LAinc        = -I${MKLROOT}\/include#/' hpl/Make.Intel64 && \
    sed -iner 's/LAlib        = -lmkl_i2p -lpthread -lguide/LAlib        = ${MKLROOT}\/lib\/intel64\/libmkl_scalapack_lp64.a -Wl,\\\
                --start-group ${MKLROOT}\/lib\/intel64\/libmkl_intel_lp64.a \\\
                ${MKLROOT}\/lib\/intel64\/libmkl_intel_thread.a \\\
                ${MKLROOT}\/lib\/intel64\/libmkl_core.a \\\
                ${MKLROOT}\/lib\/intel64\/libmkl_blacs_openmpi_ilp64.a -Wl,\\\
                --end-group -liomp5 -lpthread -lm -ldl/' hpl/Make.Intel64 && \
    sed -ine 's/mpicc/mpiicc/' hpl/Make.Intel64 && \
    sed -iner 's/^CCFLAGS      =/CCFLAGS      = $(HPL_DEFS) -O3 -fno-alias -Wall -mtune=corei7 -no-prec-div -fp-model fast=2 -parallel -qopenmp #/' hpl/Make.Intel64 && \
    bash -c 'source /etc/profile.d/modules.sh && \
        module use ${APPDIR}/modulefiles && \
        module load compiler/intel/2020.0.166 la_lib/intel/2020.0.166 mpi/intel/2020.0.166 && \
        make arch=Intel64 -j$(nproc)'
    
Bootstrap: docker
From: nvidia/cuda:10.0-runtime-ubuntu18.04
Stage: runtime

# %files
    # /data/singu/def_files/hpc_mpi_cuda_singu_def_file/modulefiles/hpcc /root/modulefiles/hpcc
    # /data/singu/def_files/hpc_mpi_cuda_singu_def_file/modulefiles/runtime /root/modulefiles

%files from build
    /root/hpcc-1.5.0 /root/hpcc-1.5.0

%post
    export APPDIR=/root && \
    export MODULEFILES=/root/modulefiles && \
    export DEBIAN_FRONTEND=noninteractive
    apt update && apt install -y wget locate tcl environment-modules
#intel
    cd $APPDIR && \
    wget https://apt.repos.intel.com/2020/GPG-PUB-KEY-INTEL-PSXE-RUNTIME-2020 && \
	apt-key add GPG-PUB-KEY-INTEL-PSXE-RUNTIME-2020 && \
	echo "deb https://apt.repos.intel.com/2020 intel-psxe-runtime main" > /etc/apt/sources.list.d/intel-psxe-runtime-2020.list && \
	apt update && apt install -y intel-icc-runtime intel-mkl-runtime intel-mpi-runtime intel-openmp-runtime && \
    	updatedb && \
	bash -c 'source $(locate mklvars.sh) intel64 && source $(locate mpivars.sh) && env | grep intel > $SINGULARITY_ENVIRONMENT'

%environment
    export HPCC_EXE=/root/hpcc-1.5.0/hpcc

%startscript
    ${HPCC_EXE}
